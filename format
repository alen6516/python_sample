# 常數用全寫
	PORT = 179

# 內部用的attribute和method用_開頭
	_private_attribute

# method 名稱用動詞開頭，變數名稱用形容詞開頭
	def get_time():
		...
	
	result_time = get_time()

# 預處理的 method 用正常名稱，真正的 method 應該是一個 private method，所以用 _ 開頭
	handle
	_handle
  但是 python 允許巢狀 function define 所以可以寫成
  	def handle
	    def _handle
	        ....

# 檔案名稱用小寫
	food.py

# class 名稱用大寫開頭
	class Foo

/* deprecated
 * # class method 開頭用加上 cls，多個字時用 _ 相連
 *	cls_handle
 *
 * # class 的變數開頭加入 cls_，多個字用 _ 隔開
 *	cls_reg_li
*/

# instance method 用小寫開頭，多個字時用 _ 相連
	parse_tcp
	_parse_tcp
	
# 變數命名時，尾端加入 type 區別
dict	  => _di
list	  => _li
set	  => _set
tuple 	  => _tu
string    => _str
int	  => _int
float	  => _flo

# 其他常用縮寫
register	=> reg
response	=> res
add		=> add
delete		=> del
temp		=> tmp
local 		=> loc
global		=> glo
class		=> cls
instance	=> ins
default		=> default
parameter	=> para
variable	=> var
global		=> glo
local		=> loc

# 註解(用#，通常不是一個完整的句子)
# single line needless code, ex: x = x + 1	# add times

# 文件字串(docstring)
"""Returns a list of handlers for the specific event.

:param ev: The event to handle.
:param state: The current state. ("dispatcher")
If None is given, returns all handlers for the event.
Otherwise, returns only handlers that are interested
in the specified state.
The default is None.
"""
